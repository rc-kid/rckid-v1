; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]

[env:rckid-avr]
platform = atmelmegaavr
board = ATtiny1616
#board = ATtiny3216
framework = arduino
# the extra script is required to ensure that the app starts *after* the bootloader
extra_scripts = extra.py
# So it seems that the default frequency is indeed 8Mhz and the CLK_PER divider is likely not set, resuklting in CLK_PER being 8Mhz too.
board_build.f_cpu = 8000000L
board_hardware.oscillator = internal
board_hardware.bod = 2.7v
build_unflags =
    -std=gnu++11
build_flags = 
    -DARDUINO
    -std=c++17
    -Wpedantic
#    -DDISABLEMILLIS
    -DMILLIS_USE_TIMERNONE
    -I../../include
    -I../
lib_deps = 
    Wire
    SPI
# The AVR code is uploaded via the I2C bootloader, hence completely custom upload command
upload_command = sudo /home/pi/rckid/build/avr-i2c-bootloader/i2c-programmer write $SOURCE
# These are legacy settings for when UPDI was used
# upload_speed = 115200
# upload_port = /dev/ttyAMA0
# upload_flags =
#     -d
#     tiny1616
#     -c
#     $UPLOAD_PORT
#     -b
#     $UPLOAD_SPEED
# upload_command = pyupdi $UPLOAD_FLAGS -f $SOURCE

